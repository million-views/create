{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://schemas.million-views.dev/create/template.v1.json",
  "title": "create-scaffold Template Manifest",
  "description": "Authoritative schema describing template.json metadata expected by the @m5nv/create-scaffold CLI.",
  "type": "object",
  "additionalProperties": true,
  "required": [
    "name",
    "description"
  ],
  "properties": {
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 120,
      "description": "Human-readable template identifier (defaults to directory name when omitted)."
    },
    "description": {
      "type": "string",
      "minLength": 1,
      "description": "Short summary displayed in template listings and CLI output."
    },
    "handoff": {
      "type": "array",
      "description": "Post-create next steps presented to end users after scaffolding.",
      "items": {
        "$ref": "#/$defs/handoffStep"
      }
    },
    "metadata": {
      "type": "object",
      "description": "Supplemental metadata consumed by create-scaffold tooling.",
      "additionalProperties": true,
      "properties": {
        "placeholders": {
          "type": "array",
          "description": "Inventory of placeholder tokens that still require runtime values.",
          "items": {
            "$ref": "#/$defs/placeholder"
          }
        }
      }
    },
    "setup": {
      "type": "object",
      "description": "Declarative configuration used to drive scaffolding behaviour.",
      "additionalProperties": false,
      "properties": {
        "authoringMode": {
          "type": "string",
          "enum": [
            "wysiwyg",
            "composable"
          ],
          "description": "Authoring workflow mode. WYSIWYG mirrors a finished project; composable assembles features."
        },
        "authorAssetsDir": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "pattern": "^[A-Za-z0-9._-]+$",
          "description": "Directory that stores author-only assets copied in before setup (default __scaffold__)."
        },
        "dimensions": {
          "type": "object",
          "description": "Feature toggles exposed to end users when instantiating the template.",
          "minProperties": 1,
          "patternProperties": {
            "^[a-z][a-z0-9_-]{0,49}$": {
              "$ref": "#/$defs/dimension"
            }
          },
          "additionalProperties": false
        },
        "supportedOptions": {
          "type": "array",
          "description": "Legacy array of option tokens upgraded to a capabilities dimension at runtime.",
          "items": {
            "$ref": "#/$defs/dimensionValue"
          }
        }
      }
    }
  },
  "$defs": {
    "handoffStep": {
      "type": "string",
      "minLength": 1,
      "maxLength": 240,
      "description": "Instruction or command presented after scaffold completion."
    },
    "placeholder": {
      "type": "object",
      "required": [
        "name"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^\\{\\{[A-Z0-9_]+\\}\\}$",
          "description": "Token formatted as {{TOKEN_NAME}} that appears in template files."
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Human-readable context for the placeholder."
        },
        "required": {
          "type": "boolean",
          "description": "Whether the token must be supplied before scaffolding can proceed."
        },
        "sensitive": {
          "type": "boolean",
          "description": "Marks values as secrets so tooling can mask them."
        },
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "boolean"
          ],
          "description": "Preferred primitive type when collecting values."
        },
        "default": {
          "description": "Default value to use when no explicit input is provided.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            }
          ]
        }
      }
    },
    "dimension": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "values"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "single",
            "multi"
          ],
          "description": "Selection mode for the dimension."
        },
        "values": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/dimensionValue"
          },
          "uniqueItems": true,
          "description": "Allowed tokens exposed for the dimension."
        },
        "default": {
          "description": "Default selection applied when the user omits this dimension.",
          "anyOf": [
            {
              "type": [
                "string",
                "null"
              ]
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/$defs/dimensionValue"
              },
              "uniqueItems": true
            }
          ]
        },
        "requires": {
          "$ref": "#/$defs/dimensionRelation",
          "description": "Mapping of value -> required companion values within the same dimension."
        },
        "conflicts": {
          "$ref": "#/$defs/dimensionRelation",
          "description": "Mapping of value -> disallowed companion values within the same dimension."
        },
        "policy": {
          "type": "string",
          "enum": [
            "strict",
            "warn"
          ],
          "description": "Validation behaviour when unknown values are supplied."
        },
        "builtIn": {
          "type": "boolean",
          "description": "Flags values that originate from the CLI rather than the template author."
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "Explains how the dimension influences the scaffold."
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "single"
              }
            },
            "required": [
              "type"
            ]
          },
          "then": {
            "properties": {
              "default": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "multi"
              }
            },
            "required": [
              "type"
            ]
          },
          "then": {
            "properties": {
              "default": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/dimensionValue"
                },
                "uniqueItems": true
              }
            }
          }
        }
      ]
    },
    "dimensionValue": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[A-Za-z0-9_-]+$",
      "description": "Token representing a selectable option."
    },
    "dimensionRelation": {
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        "^[A-Za-z0-9_-]+$": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/dimensionValue"
          },
          "uniqueItems": true
        }
      },
      "additionalProperties": false
    }
  }
}